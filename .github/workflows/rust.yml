name: Rust

on:
  push:
    branches: [ "master" ]
    tags:
      - "v*"
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
        features:
          - ""
          - "urls_includes"
    steps:
      - uses: actions/checkout@v4
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy
      - name: Build
        run: cargo build --verbose
      - name: Run tests
        run: |
          if [ -z "${{ matrix.features }}" ]; then
            cargo test --verbose
          else
            cargo test --verbose --features ${{ matrix.features }}
          fi
      - name: Format
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy -- -D warnings

  release:
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable

      - name: Get version from tag
        id: tag
        run: |
          version=${GITHUB_REF#refs/tags/}
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Publish to crates.io (skip prerelease)
        run: |
          version=${{ steps.tag.outputs.version }}
          if [[ "$version" =~ -(dev|alpha|beta|rc|prerelease).* ]]; then
            echo "Pre-release version ($version), skip publishing to crates.io"
          else
            cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
          fi

      - name: Package source code
        run: |
          version=${{ steps.tag.outputs.version }}
          tar czf hocon-rs-${version}.tar.gz --exclude .git .
          sha256sum hocon-rs-${version}.tar.gz > hocon-rs-${version}.tar.gz.sha256

      - name: Generate changelog
        id: changelog
        run: |
          log=$(git log --pretty=format:"* %s" $(git describe --tags --abbrev=0 @^)..@)
          echo "log<<EOF" >> $GITHUB_OUTPUT
          echo "$log" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: "Release ${{ steps.tag.outputs.version }}"
          tag_name: ${{ steps.tag.outputs.version }}
          body: ${{ steps.changelog.outputs.log }}
          files: |
            hocon-rs-${{ steps.tag.outputs.version }}.tar.gz
            hocon-rs-${{ steps.tag.outputs.version }}.tar.gz.sha256
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}